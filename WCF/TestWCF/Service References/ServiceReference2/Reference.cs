//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestWCF.ServiceReference2 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FaultException", Namespace="http://schemas.datacontract.org/2004/07/Icl")]
    [System.SerializableAttribute()]
    public partial class FaultException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MsgField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Msg {
            get {
                return this.MsgField;
            }
            set {
                if ((object.ReferenceEquals(this.MsgField, value) != true)) {
                    this.MsgField = value;
                    this.RaisePropertyChanged("Msg");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/Icl")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://127.0.0.1:11224", ConfigurationName="ServiceReference2.ServiceB", CallbackContract=typeof(TestWCF.ServiceReference2.ServiceBCallback))]
    public interface ServiceB {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://127.0.0.1:11224/ServiceB/GetDataB", ReplyAction="http://127.0.0.1:11224/ServiceB/GetDataBResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TestWCF.ServiceReference2.FaultException), Action="http://127.0.0.1:11224/ServiceB/GetDataBFaultExceptionFault", Name="FaultException", Namespace="http://schemas.datacontract.org/2004/07/Icl")]
        string GetDataB(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://127.0.0.1:11224/ServiceB/GetDataB", ReplyAction="http://127.0.0.1:11224/ServiceB/GetDataBResponse")]
        System.Threading.Tasks.Task<string> GetDataBAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://127.0.0.1:11224/ServiceB/GetDataUsingDataContractB", ReplyAction="http://127.0.0.1:11224/ServiceB/GetDataUsingDataContractBResponse")]
        TestWCF.ServiceReference2.CompositeType GetDataUsingDataContractB(TestWCF.ServiceReference2.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://127.0.0.1:11224/ServiceB/GetDataUsingDataContractB", ReplyAction="http://127.0.0.1:11224/ServiceB/GetDataUsingDataContractBResponse")]
        System.Threading.Tasks.Task<TestWCF.ServiceReference2.CompositeType> GetDataUsingDataContractBAsync(TestWCF.ServiceReference2.CompositeType composite);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServiceBCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://127.0.0.1:11224/ServiceB/Call", ReplyAction="http://127.0.0.1:11224/ServiceB/CallResponse")]
        int Call(int t);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServiceBChannel : TestWCF.ServiceReference2.ServiceB, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceBClient : System.ServiceModel.DuplexClientBase<TestWCF.ServiceReference2.ServiceB>, TestWCF.ServiceReference2.ServiceB {
        
        public ServiceBClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ServiceBClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ServiceBClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceBClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceBClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public string GetDataB(int value) {
            return base.Channel.GetDataB(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataBAsync(int value) {
            return base.Channel.GetDataBAsync(value);
        }
        
        public TestWCF.ServiceReference2.CompositeType GetDataUsingDataContractB(TestWCF.ServiceReference2.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractB(composite);
        }
        
        public System.Threading.Tasks.Task<TestWCF.ServiceReference2.CompositeType> GetDataUsingDataContractBAsync(TestWCF.ServiceReference2.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractBAsync(composite);
        }
    }
}
